"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/auth.ts":
/*!***********************!*\
  !*** ./utils/auth.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   isTokenExpired: function() { return /* binding */ isTokenExpired; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   roleMap: function() { return /* binding */ roleMap; }\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/./node_modules/jwt-decode/build/esm/index.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n\n\nconst roleMap = {\n    \"e9684fda-b6b3-438e-a26c-e83d0e880333\": \"patient\",\n    \"735df18b-b754-4dd5-860b-11ac673cf397\": \"doctor\",\n    \"b7a8e267-b88f-4a78-9e67-cfc9b01d98b3\": \"admin\"\n};\nasync function login(email, password) {\n    const response = await fetch(\"http://localhost:8000\" + \"/auth/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    });\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Login failed\");\n    }\n    const data = await response.json();\n    const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__.jwtDecode)(data.access_token);\n    const user = {\n        id: decoded.sub,\n        email: decoded.email,\n        name: decoded.name,\n        roleId: decoded.roleId,\n        photo_profile: \"\",\n        user_type: roleMap[decoded.roleId] || \"unknown\"\n    };\n    if (user.user_type === \"unknown\") {\n        throw new Error(\"Invalid role\");\n    }\n    const loginResponse = {\n        user,\n        access_token: data.access_token,\n        refresh_token: data.refresh_token\n    };\n    saveAuthTokens(loginResponse);\n    setAuthCookies(loginResponse);\n    return loginResponse;\n}\n// Only save tokens, not user data\nfunction saveAuthTokens(response) {\n    localStorage.setItem(\"access_token\", response.access_token);\n    localStorage.setItem(\"refresh_token\", response.refresh_token);\n}\nfunction isTokenExpired(token) {\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__.jwtDecode)(token);\n        return decoded.exp * 1000 < Date.now(); // Convert exp to milliseconds\n    } catch (e) {\n        return true;\n    }\n}\n// Get fresh user data from token whenever needed\nfunction getCurrentUser() {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token || isTokenExpired(token)) {\n        logout();\n        return null;\n    }\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__.jwtDecode)(token);\n        return {\n            id: decoded.sub,\n            email: decoded.email,\n            name: decoded.name,\n            roleId: decoded.roleId,\n            photo_profile: \"\",\n            user_type: roleMap[decoded.roleId] || \"unknown\"\n        };\n    } catch (error) {\n        console.error(\"Invalid token\", error);\n        return null;\n    }\n}\nasync function refreshAccessToken() {\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n    if (!refreshToken) return null;\n    const response = await fetch(\"http://localhost:8000\" + \"/auth/refresh\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            refresh_token: refreshToken\n        })\n    });\n    if (response.ok) {\n        const data = await response.json();\n        saveAuthTokens(data);\n        return data.access_token;\n    }\n    return null;\n}\nasync function logout() {\n    try {\n        // Get access token\n        const accessToken = localStorage.getItem(\"access_token\");\n        if (!accessToken) return true;\n        // Call backend logout endpoint\n        const response = await fetch(\"http://localhost:8000\" + \"/auth/logout\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": \"Bearer \".concat(accessToken),\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Logout failed\");\n        }\n        // Clear frontend storage\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(\"access_token\");\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(\"refresh_token\");\n        return true;\n    } catch (error) {\n        console.error(\"Logout error:\", error);\n        return false;\n    }\n}\nfunction setAuthCookies(loginResponse) {\n    js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(\"access_token\", loginResponse.access_token, {\n        secure: true,\n        sameSite: \"Strict\"\n    });\n    js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(\"refresh_token\", loginResponse.refresh_token, {\n        secure: true,\n        sameSite: \"Strict\"\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/auth.ts\n"));

/***/ })

});